[
  {
    "source": "Semgrep",
    "path": "lma-ai-stack/source/lambda_layers/transcript_enrichment_layer/eventprocessor_utils/eventprocessor.py",
    "line": 63,
    "issue": "Detected JWT token decoded with 'verify=False'. This bypasses any integrity checks for the token which means the token could be tampered with by malicious actors. Ensure that the JWT token is verified.",
    "check_id": "python.jwt.security.unverified-jwt-decode.unverified-jwt-decode",
    "priority": "MEDIUM",
    "references": "https://github.com/we45/Vulnerable-Flask-App/blob/752ee16087c0bfb79073f68802d907569a1f0df7/app/app.py#L96",
    "status": "Open"
  },
  {
    "source": "Semgrep",
    "path": "lma-browser-extension-stack/public/content_scripts/providers/webex.js",
    "line": 26,
    "issue": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
    "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
    "priority": "LOW",
    "references": "https://owasp.org/Top10/A03_2021-Injection",
    "status": "Open"
  },
  {
    "source": "Semgrep",
    "path": "lma-browser-extension-stack/public/content_scripts/providers/zoom.js",
    "line": 160,
    "issue": "No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).",
    "check_id": "javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
    "priority": "LOW",
    "references": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures",
    "status": "Open"
  },
  {
    "source": "Semgrep",
    "path": "lma-virtual-participant-stack/backend/src/kds.py",
    "line": 263,
    "issue": "Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.",
    "check_id": "python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests",
    "priority": "HIGH",
    "references": "https://owasp.org/www-community/attacks/Server_Side_Request_Forgery",
    "status": "suppressed"
  },
  {
    "source": "Semgrep",
    "path": "lma-virtual-participant-stack/backend/src/kds.py",
    "line": 263,
    "issue": "Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.",
    "check_id": "python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests",
    "priority": "HIGH",
    "references": "https://owasp.org/www-community/attacks/Server_Side_Request_Forgery",
    "status": "suppressed"
  },
  {
    "source": "Semgrep",
    "path": "lma-virtual-participant-stack/backend/src/meeting.py",
    "line": 56,
    "issue": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.",
    "check_id": "python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
    "priority": "LOW",
    "references": "https://cwe.mitre.org/data/definitions/939.html",
    "status": "Open"
  },
  {
    "source": "Semgrep",
    "path": "lma-virtual-participant-stack/backend/src/status_manager.py",
    "line": 145,
    "issue": "Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.",
    "check_id": "python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests",
    "priority": "HIGH",
    "references": "https://owasp.org/www-community/attacks/Server_Side_Request_Forgery",
    "status": "suppressed"
  },
  {
    "source": "Semgrep",
    "path": "lma-virtual-participant-stack/backend/src/status_manager.py",
    "line": 145,
    "issue": "Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.",
    "check_id": "python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests",
    "priority": "HIGH",
    "references": "https://owasp.org/www-community/attacks/Server_Side_Request_Forgery",
    "status": "suppressed"
  },
  {
    "source": "Bandit",
    "path": "lma-meetingassist-setup-stack/src/qna_qbusiness_lambdahook_function.py",
    "line": 309,
    "issue": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
    "fix": "Replace `random` module with `secrets` module for cryptographic purposes. Use `secrets.randbelow()`, `secrets.token_bytes()`, or `secrets.token_hex()` for security-sensitive random values.",
    "check_id": "B311",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-meetingassist-setup-stack/src/setup_function.py",
    "line": 168,
    "issue": "Probable insecure usage of temp file/directory.",
    "fix": "Replace hardcoded temporary directory paths with `tempfile.mkdtemp()` or `tempfile.gettempdir()` to use system-appropriate temporary directories.",
    "check_id": "B108",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/details.py",
    "line": 38,
    "issue": "Probable insecure usage of temp file/directory.",
    "fix": "Replace hardcoded temporary directory paths with `tempfile.mkdtemp()` or `tempfile.gettempdir()` to use system-appropriate temporary directories.",
    "check_id": "B108",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/details.py",
    "line": 39,
    "issue": "Probable insecure usage of temp file/directory.",
    "fix": "Replace hardcoded temporary directory paths with `tempfile.mkdtemp()` or `tempfile.gettempdir()` to use system-appropriate temporary directories.",
    "check_id": "B108",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/kds.py",
    "line": 205,
    "issue": "Call to requests without timeout",
    "fix": "Add timeout parameters to HTTP requests. Use `timeout=(connection_timeout, read_timeout)` to prevent indefinite blocking and potential denial of service.",
    "check_id": "B113",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/kds.py",
    "line": 263,
    "issue": "Call to requests without timeout",
    "fix": "Add timeout parameters to HTTP requests. Use `timeout=(connection_timeout, read_timeout)` to prevent indefinite blocking and potential denial of service.",
    "check_id": "B113",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/meeting.py",
    "line": 56,
    "issue": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
    "fix": "Replace `urllib.urlopen()` with `urllib.request.urlopen()` and implement proper URL validation. Validate URLs against allowed protocols and domains.",
    "check_id": "B310",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b310-urllib-urlopen",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/status_manager.py",
    "line": 81,
    "issue": "Call to requests without timeout",
    "fix": "Add timeout parameters to HTTP requests. Use `timeout=(connection_timeout, read_timeout)` to prevent indefinite blocking and potential denial of service.",
    "check_id": "B113",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/status_manager.py",
    "line": 145,
    "issue": "Call to requests without timeout",
    "fix": "Add timeout parameters to HTTP requests. Use `timeout=(connection_timeout, read_timeout)` to prevent indefinite blocking and potential denial of service.",
    "check_id": "B113",
    "priority": "Medium",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 108,
    "issue": "Try, Except, Pass detected.",
    "fix": "Replace bare `except: pass` blocks with specific exception handling. Either handle specific exceptions appropriately or use logging to record the exception details.",
    "check_id": "B110",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 118,
    "issue": "Try, Except, Pass detected.",
    "fix": "Replace bare `except: pass` blocks with specific exception handling. Either handle specific exceptions appropriately or use logging to record the exception details.",
    "check_id": "B110",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 146,
    "issue": "Try, Except, Pass detected.",
    "fix": "Replace bare `except: pass` blocks with specific exception handling. Either handle specific exceptions appropriately or use logging to record the exception details.",
    "check_id": "B110",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 148,
    "issue": "Try, Except, Pass detected.",
    "fix": "Replace bare `except: pass` blocks with specific exception handling. Either handle specific exceptions appropriately or use logging to record the exception details.",
    "check_id": "B110",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 186,
    "issue": "Try, Except, Continue detected.",
    "fix": "Replace `except: continue` blocks with specific exception handling. Log exceptions appropriately and ensure the continue statement is intentional and safe.",
    "check_id": "B112",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html",
    "status": "Open"
  },
  {
    "source": "Bandit",
    "path": "lma-virtual-participant-stack/backend/src/zoom.py",
    "line": 193,
    "issue": "Try, Except, Continue detected.",
    "fix": "Replace `except: continue` blocks with specific exception handling. Log exceptions appropriately and ensure the continue statement is intentional and safe.",
    "check_id": "B112",
    "priority": "Low",
    "references": "https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "OSSSetupLambdaFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'OSSSetupLambdaFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "OSSSetupLambdaFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "OSSIndexCustomResourceFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'OSSIndexCustomResourceFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "OSSIndexCustomResourceFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "StartIngestionJobFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'StartIngestionJobFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockkb-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "StartIngestionJobFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNASummarizeCallFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'LambdaHookSummarizeCallRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNASummarizeCallFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockKnowledgeBaseFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'QNABedrockKnowledgeBaseFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockKnowledgeBaseFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockAgentFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'QNABedrockAgentFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockAgentFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockLLMFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'QNABedrockLLMFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QNABedrockLLMFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "SetupFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'SetupFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "SetupFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "CredentialsTable",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QBusinessLambdaHookFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'LambdaFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "QBusinessLambdaHookFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 26,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "DynamoDB Table",
    "resourceName": "LLMPromptTemplateTable"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 72,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 72,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 72,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 72,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "security-matrix",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "LLMPromptTemplateTable",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "LLMPromptUploadFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Add a PermissionsBoundary to IAM role 'LLMPromptUploadRole' to limit the scope of IAM resources it can create.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "LLMPromptUploadFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "UpdateLMASettingsFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'UpdateLMASettingsFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "UpdateLMASettingsFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "LoggingBucket",
    "issue": "S3 bucket used as CloudFront origin lacks OAC configuration (intrinsic function used for BucketName)",
    "fix": "Use explicit string values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-005",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "RecordingsBucket",
    "issue": "S3 bucket does not have proper access logging or violates least privilege principle (intrinsic function used for DestinationBucketName)",
    "fix": "Use explicit string values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-001",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "RecordingsBucket",
    "issue": "S3 bucket used as CloudFront origin lacks OAC configuration (intrinsic function used for BucketName)",
    "fix": "Use explicit string values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-005",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "RecordingsBucket",
    "issue": "S3 bucket lacks lifecycle policy",
    "fix": "Configure a lifecycle policy to manage S3 objects during their lifetime.",
    "priority": "HIGH",
    "check_id": "S3-008",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-cognito-stack/deployment/lma-cognito-stack.yaml",
    "line": 478,
    "issue": "Ensure AWS Cognito identity pool does not allow unauthenticated guest access",
    "check_id": "CKV_AWS_366",
    "priority": "MEDIUM",
    "fix": "Disable unauthenticated access in Cognito identity pools by setting 'AllowUnauthenticatedIdentities: false' in AWS::Cognito::IdentityPool resource. If guest access is required, implement proper restrictions and monitoring for unauthenticated user actions.",
    "status": "Open",
    "stack": "lma-cognito-stack-deployment-lma-cognito-stack",
    "resourceType": "Cognito IdentityPool",
    "resourceName": "AgentAssistBotIdentityPool"
  },
  {
    "source": "security-matrix",
    "path": "lma-cognito-stack/deployment/lma-cognito-stack.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "GetDomainLambda",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'GetDomainLambdaRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-cognito-stack/deployment/lma-cognito-stack.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "GetDomainLambda",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-cognito-stack/deployment/lma-cognito-stack.yaml",
    "resourceType": "AWS::Cognito::IdentityPool",
    "resourceName": "AgentAssistBotIdentityPool",
    "issue": "Cognito Identity Pool allows unauthenticated users",
    "fix": "Set AllowUnauthenticatedIdentities to 'false' to prevent unauthenticated access.",
    "priority": "HIGH",
    "check_id": "COGNITO-001",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockagent-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "SendMessageFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'SendMessageFunctionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-bedrockagent-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "SendMessageFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-vpc-stack/template.yaml",
    "resourceType": "AWS::EC2::VPC",
    "resourceName": "VPC",
    "issue": "VPC VPC has flow logs enabled but no retention period is set",
    "fix": "Configure retention period for the flow logs destination (CloudWatch Logs, S3, or Kinesis).",
    "priority": "HIGH",
    "check_id": "NET-VPC-007",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-vpc-stack/template.yaml",
    "resourceType": "AWS::Logs::LogGroup",
    "resourceName": "VPCFlowLogsLogGroup",
    "issue": "Log group VPCFlowLogsLogGroup is used by flow logs but has no retention period",
    "fix": "Set RetentionInDays property on this AWS::Logs::LogGroup resource.",
    "priority": "HIGH",
    "check_id": "NET-VPC-007",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-vpc-stack/template.yaml",
    "resourceType": "AWS::EC2::FlowLog",
    "resourceName": "VPCFlowLog",
    "issue": "Flow log uses CloudWatch Logs group VPCFlowLogsLogGroup without a retention period",
    "fix": "Set RetentionInDays property on the AWS::Logs::LogGroup resource.",
    "priority": "HIGH",
    "check_id": "NET-VPC-007",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-browser-extension-stack/template.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "BrowserExtensionCodeBuildProject",
    "issue": "Container images are not being scanned for vulnerabilities (no image scanning step in build process)",
    "fix": "Add a step in the buildspec to scan container images using tools like Trivy, Clair, or Anchore.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-browser-extension-stack/template.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "BrowserExtensionCodeBuildProject",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'BrowserExtensionCodeBuildServiceRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-browser-extension-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "CodeBuildTriggerFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'LambdaExecutionRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-browser-extension-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "CodeBuildTriggerFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2259,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VirtualParticipantTable"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2444,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2444,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2444,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2444,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2509,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VPTaskRegistry"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "EventSourcingTable",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "LMAUICodeBuildProject",
    "issue": "Container images are not being scanned for vulnerabilities (no image scanning step in build process)",
    "fix": "Add a step in the buildspec to scan container images using tools like Trivy, Clair, or Anchore.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "LMAUICodeBuildProject",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'LMAUICodeBuildServiceRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "VirtualParticipantTable",
    "issue": "Database does not have encryption at rest enabled",
    "fix": "Add SSESpecification with SSEEnabled set to true to enable encryption at rest",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "VirtualParticipantTable",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "VPTaskRegistry",
    "issue": "Database does not have encryption at rest enabled",
    "fix": "Add SSESpecification with SSEEnabled set to true to enable encryption at rest",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "VPTaskRegistry",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "BucketDeleteLambda",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'BucketDeleteLambdaRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "BucketDeleteLambda",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "WebAppBucket",
    "issue": "S3 bucket does not have proper access logging or violates least privilege principle (intrinsic function used for DestinationBucketName)",
    "fix": "Use explicit string values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-001",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "WebAppBucket",
    "issue": "S3 bucket used as CloudFront origin lacks OAC configuration (intrinsic function used for BucketName)",
    "fix": "Use explicit string values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-005",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "WebAppBucket",
    "issue": "S3 bucket lacks lifecycle policy",
    "fix": "Configure a lifecycle policy to manage S3 objects during their lifetime.",
    "priority": "HIGH",
    "check_id": "S3-008",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::S3::BucketPolicy",
    "resourceName": "WebAppBucketPolicy",
    "issue": "S3 bucket does not have proper access logging or violates least privilege principle (intrinsic function used for policy Principal)",
    "fix": "Use explicit values instead of CloudFormation intrinsic functions for security-critical properties.",
    "priority": "HIGH",
    "check_id": "S3-001",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "stack": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "WebAppCloudFrontDistribution",
    "issue": "CloudFront S3 origin lacks Origin Access Control (Origin[0] with domain [object Object] uses legacy Origin Access Identity)",
    "fix": "Consider upgrading to Origin Access Control by adding OriginAccessControlId to the origin configuration.",
    "priority": "medium",
    "check_id": "CFR-006",
    "status": "Open"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 45,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 45,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 45,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 45,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 78,
    "issue": "Ensure IAM policies does not allow write access without constraints",
    "check_id": "CKV_AWS_111",
    "priority": "LOW",
    "fix": "Add resource constraints to IAM policies with write permissions. In PolicyDocument, scope write actions to specific resources instead of using wildcards. For example, replace \"s3:PutObject\" with \"*\" resource with specific bucket ARNs like \"arn:aws:s3:::mybucket/*\" to limit write access scope.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "IAM Role",
    "resourceName": "VirtualParticipantManagerRole"
  },
  {
    "source": "Checkov",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "line": 373,
    "issue": "Ensure ECR Image Tags are immutable",
    "check_id": "CKV_AWS_51",
    "priority": "LOW",
    "fix": "Configure AWS::ECR::Repository with immutable tags by setting 'ImageTagMutability: IMMUTABLE'. This prevents image tag overwriting, ensuring container image integrity and preventing accidental deployment of modified images.",
    "status": "Open",
    "stack": "lma-websocket-transcriber-stack-deployment-lma-websocket-transcriber",
    "resourceType": "ECR Repository",
    "resourceName": "TranscriberECRRepository"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::ECR::Repository",
    "resourceName": "TranscriberECRRepository",
    "issue": "Container images are not being scanned for vulnerabilities (ECR repository without scan on push)",
    "fix": "Enable image scanning by setting ImageScanningConfiguration.ScanOnPush to true.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "EcrImagesDeleteLambdaRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "EcrImagesDeleteLambda",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'EcrImagesDeleteLambdaRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "EcrImagesDeleteLambda",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TranscriberCodeBuildServiceRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "WebsocketTranscriberCodeBuildProject",
    "issue": "Container images are not being scanned for vulnerabilities (no image scanning step in build process)",
    "fix": "Add a step in the buildspec to scan container images using tools like Trivy, Clair, or Anchore.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "WebsocketTranscriberCodeBuildProject",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'TranscriberCodeBuildServiceRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "LambdaCodeBuildStartBuildExecutionRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::DynamoDB::Table",
    "resourceName": "TranscriberCallEventTable",
    "issue": "DynamoDB data plane events are not captured by CloudTrail logging",
    "fix": "Configure CloudTrail to capture DynamoDB data plane events.",
    "priority": "HIGH",
    "check_id": "DDB-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::EC2::SecurityGroup",
    "resourceName": "TranscribingWebsocketLoadBalancerSecurityGroup",
    "issue": "Security group allows unrestricted inbound access from 0.0.0.0/0",
    "fix": "Restrict ingress rules to specific IP ranges instead of 0.0.0.0/0 or ::/0. If this is a production environment and the instance must be public, consider using a load balancer instead of direct access.",
    "priority": "HIGH",
    "check_id": "EC2-003",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::EC2::SecurityGroup",
    "resourceName": "TranscribingWebsocketLoadBalancerSecurityGroup",
    "issue": "Security group allows unrestricted outbound access to the entire Internet",
    "fix": "Add explicit egress rules to the security group that restrict outbound traffic to specific IP ranges and ports required by the application.",
    "priority": "MEDIUM",
    "check_id": "EC2-005",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TranscriberWebsocketTaskDefTaskRole",
    "issue": "ECS task IAM role may not follow least-privilege principle",
    "fix": "Define specific policies for the task role that grant only the permissions required for the task to function.",
    "priority": "HIGH",
    "check_id": "ECS-006",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TranscriberWebsocketTaskDefTaskRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TcaDataAccessRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TranscriberWebsocketTaskDef",
    "issue": "ECS task may not be using secure parameter storage for sensitive information. Potentially sensitive data found in environment variables: RECORDINGS_KEY_PREFIX, TCA_DATA_ACCESS_ROLE_ARN",
    "fix": "Store sensitive parameters in AWS Secrets Manager or SSM Parameter Store as SecureString and reference them using secrets in the task definition.",
    "priority": "HIGH",
    "check_id": "ECS-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TranscriberWebsocketTaskDef",
    "issue": "Container role may have excessive permissions",
    "fix": "Manually verify that the TaskRole permissions align with the container's actual requirements. Follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TranscriberWebsocketTaskDef",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'TranscriberWebsocketTaskDefTaskRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TranscriberWebsocketTaskDefExecutionRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "WebSocketCloudFrontDistribution",
    "issue": "CloudFront distribution lacks WAF protection (public-facing web distribution without WAF protection)",
    "fix": "Add a WebACLId property to the DistributionConfig to associate a WAF Web ACL with this distribution",
    "priority": "HIGH",
    "check_id": "CFR-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "WebSocketCloudFrontDistribution",
    "issue": "CloudFront distribution uses insecure HTTP for origin (Origin[0] uses http-only)",
    "fix": "Set OriginProtocolPolicy to 'https-only' for all custom origins.",
    "priority": "HIGH",
    "check_id": "CFR-005",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "PCAIntegrationFunctionRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-virtual-participant-stack/template.yaml",
    "line": 285,
    "issue": "Ensure ECR Image Tags are immutable",
    "check_id": "CKV_AWS_51",
    "priority": "LOW",
    "fix": "Configure AWS::ECR::Repository with immutable tags by setting 'ImageTagMutability: IMMUTABLE'. This prevents image tag overwriting, ensuring container image integrity and preventing accidental deployment of modified images.",
    "status": "Open",
    "stack": "lma-virtual-participant-stack-template",
    "resourceType": "ECR Repository",
    "resourceName": "ImageRepo"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::ECR::Repository",
    "resourceName": "ImageRepo",
    "issue": "Container images are not being scanned for vulnerabilities (no lifecycle policy configured)",
    "fix": "Configure a lifecycle policy to clean up old and unused images.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "BuildRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "VirtualParticipantBuildProject",
    "issue": "Container images are not being scanned for vulnerabilities (no image scanning step in build process)",
    "fix": "Add a step in the buildspec to scan container images using tools like Trivy, Clair, or Anchore.",
    "priority": "HIGH",
    "check_id": "EKS-024",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::CodeBuild::Project",
    "resourceName": "VirtualParticipantBuildProject",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'BuildRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "BuildCustomResourceRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "BuildCustomResourceFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'BuildCustomResourceRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "BuildCustomResourceFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "ECSRoleCustomResourceRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "ECSRoleCustomResourceFunction",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'ECSRoleCustomResourceRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "ECSRoleCustomResourceFunction",
    "issue": "Lambda function lacks CloudWatch alarms for monitoring",
    "fix": "Create CloudWatch alarms for the following Lambda metrics: Errors,Throttles,Duration,Invocations,ConcurrentExecutions,DeadLetterErrors. Configure alarm actions (e.g., SNS notifications) to assign an owner who will monitor and respond to incidents.",
    "priority": "HIGH",
    "check_id": "LAMBDA-011",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TaskRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Avoid using wildcard actions like '*' or 'service:*'. Specify only the exact actions required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TaskExecutionRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Ensure IAM roles follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TaskDefinition",
    "issue": "ECS task may not be using secure parameter storage for sensitive information. Potentially sensitive data found in environment variables: RECORDINGS_KEY_PREFIX",
    "fix": "Store sensitive parameters in AWS Secrets Manager or SSM Parameter Store as SecureString and reference them using secrets in the task definition.",
    "priority": "HIGH",
    "check_id": "ECS-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TaskDefinition",
    "issue": "Container role may have excessive permissions",
    "fix": "Manually verify that the TaskRole permissions align with the container's actual requirements. Follow the principle of least privilege by granting only the specific permissions needed by the container workload.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::ECS::TaskDefinition",
    "resourceName": "TaskDefinition",
    "issue": "Compute resource has IAM role without permissions boundary, allowing unrestricted IAM resource creation",
    "fix": "Use simple references (!Ref or !GetAtt) for PermissionsBoundary in IAM role 'TaskRole' rather than complex CloudFormation functions.",
    "priority": "HIGH",
    "check_id": "IAM-004",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TargetECSRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "LMAVirtualParticipantSchedulerStateMachineRole",
    "issue": "Container role may have excessive permissions",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the container's functional purpose.",
    "priority": "HIGH",
    "check_id": "ECS-010",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-meetingassist-setup-stack/template.yaml",
    "resourceType": "AWS::KMS::Key",
    "resourceName": "KMSKey",
    "issue": "KMS key policy violates least privilege or separation of duties",
    "fix": "Separate encrypt actions [kms:Encrypt, kms:ReEncryptFrom, kms:ReEncryptTo, kms:GenerateDataKey, kms:GenerateDataKeyWithoutPlaintext] from decrypt actions [kms:CreateGrant, kms:DescribeKey, kms:Decrypt] into different statements with different principals for separation of duties.",
    "priority": "HIGH",
    "check_id": "KMS-002",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-main.yaml",
    "resourceType": "AWS::KMS::Key",
    "resourceName": "CustomerManagedEncryptionKey",
    "issue": "KMS key policy violates least privilege or separation of duties",
    "fix": "Separate encrypt actions [kms:Encrypt, kms:ReEncryptFrom, kms:ReEncryptTo, kms:GenerateDataKey, kms:GenerateDataKeyWithoutPlaintext] from decrypt actions [kms:CreateGrant, kms:DescribeKey, kms:Decrypt] into different statements with different principals for separation of duties.",
    "priority": "HIGH",
    "check_id": "KMS-002",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 30,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "DynamoDB Table",
    "resourceName": "LLMPromptTemplateTable"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 76,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 76,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 76,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-llm-template-setup-stack/deployment/llm-template-setup.yaml",
    "line": 76,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-llm-template-setup-stack-deployment-llm-template-setup",
    "resourceType": "Lambda Function",
    "resourceName": "LLMPromptUploadFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2510,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VPTaskRegistry"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 49,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 49,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 49,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 49,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/virtual-participant-enhancements.yaml",
    "line": 83,
    "issue": "Ensure IAM policies does not allow write access without constraints",
    "check_id": "CKV_AWS_111",
    "priority": "LOW",
    "fix": "Add resource constraints to IAM policies with write permissions. In PolicyDocument, scope write actions to specific resources instead of using wildcards. For example, replace \"s3:PutObject\" with \"*\" resource with specific bucket ARNs like \"arn:aws:s3:::mybucket/*\" to limit write access scope.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-virtual-participant-enhancements",
    "resourceType": "IAM Role",
    "resourceName": "VirtualParticipantManagerRole"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2446,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2446,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2446,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2446,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2512,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VPTaskRegistry"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2286,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VirtualParticipantTable"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2473,
    "issue": "Ensure that AWS Lambda function is configured inside a VPC",
    "check_id": "CKV_AWS_117",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function to run within VPC by setting 'VpcConfig' with 'SubnetIds' and 'SecurityGroupIds' properties. This provides network isolation and enables access to VPC-only resources like RDS instances.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2473,
    "issue": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
    "check_id": "CKV_AWS_116",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with Dead Letter Queue by setting 'DeadLetterConfig' with 'TargetArn' referencing an AWS::SQS::Queue or AWS::SNS::Topic resource. This captures failed function invocations for debugging and reprocessing.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2473,
    "issue": "Check encryption settings for Lambda environment variable",
    "check_id": "CKV_AWS_173",
    "priority": "LOW",
    "fix": "When using environment variables in your AWS::Lambda::Function or AWS::Serverless::Function resource, add the 'KmsKeyArn' property with a valid KMS key ARN to encrypt these variables. Example: 'KmsKeyArn: arn:aws:kms:region:account-id:key/key-id'. This protects sensitive information stored in environment variables from unauthorized access, which is especially important for secrets, API keys, or connection strings.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2473,
    "issue": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
    "check_id": "CKV_AWS_115",
    "priority": "LOW",
    "fix": "Configure AWS::Lambda::Function with concurrent execution limit by setting 'ReservedConcurrencyLimit' property to an appropriate value. This prevents the function from consuming all available concurrent executions in your account.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "Serverless Function",
    "resourceName": "VirtualParticipantManagerFunction"
  },
  {
    "source": "Checkov",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "line": 2539,
    "issue": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
    "check_id": "CKV_AWS_119",
    "priority": "INFO",
    "fix": "Configure AWS::DynamoDB::Table with customer-managed KMS encryption by setting 'SSESpecification' with 'SSEEnabled: true' and 'KMSMasterKeyId' referencing an AWS::KMS::Key resource instead of using default AWS-owned keys for enhanced control.",
    "status": "Open",
    "stack": "lma-ai-stack-deployment-lma-ai-stack",
    "resourceType": "DynamoDB Table",
    "resourceName": "VPTaskRegistry"
  },
  {
    "source": "security-matrix",
    "path": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::AppSync::GraphQLApi",
    "resourceName": "AppSyncApiEncrypted",
    "issue": "AppSync GraphQL API is missing appropriate authorization method (missing or incomplete documentation).\n\nYou've chosen AMAZON_COGNITO_USER_POOLS authorization. Please document the following considerations:\n\nDescription: Cognito User Pools provide comprehensive user management and authentication but add complexity and may be excessive for simpler applications.\n\nPros:\n- Built-in user management and authentication flows\n- Supports social identity providers (Google, Facebook, etc.)\n- Handles token issuance and validation\n- Includes features like MFA and adaptive authentication\n\nCons:\n- Adds complexity to the application architecture\n- May be overkill for simple applications\n- Requires Cognito setup and configuration\n- Additional cost considerations\n\nAction: Document these pros and cons in the resource metadata using either the AuthorizationDocumentation field or Comments field.",
    "priority": "HIGH",
    "check_id": "ASC-002",
    "status": "suppressed"
  },
  {
    "source": "Checkov",
    "path": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "line": 377,
    "issue": "Ensure ECR Image Tags are immutable",
    "check_id": "CKV_AWS_51",
    "priority": "LOW",
    "fix": "Configure AWS::ECR::Repository with immutable tags by setting 'ImageTagMutability: IMMUTABLE'. This prevents image tag overwriting, ensuring container image integrity and preventing accidental deployment of modified images.",
    "status": "Open",
    "stack": "lma-websocket-transcriber-stack-deployment-lma-websocket-transcriber",
    "resourceType": "ECR Repository",
    "resourceName": "TranscriberECRRepository"
  },
  {
    "source": "security-matrix",
    "stack": "lma-ai-stack/deployment/lma-ai-stack.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "WebAppCloudFrontDistribution",
    "issue": "CloudFront distribution does not have access logging enabled with proper retention (logging bucket not specified)",
    "fix": "Specify a target S3 bucket in the Logging configuration using the Bucket property.",
    "priority": "medium",
    "check_id": "CFR-003",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "stack": "lma-websocket-transcriber-stack/deployment/lma-websocket-transcriber.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "WebSocketCloudFrontDistribution",
    "issue": "CloudFront distribution does not have access logging enabled with proper retention (logging bucket not specified)",
    "fix": "Specify a target S3 bucket in the Logging configuration using the Bucket property.",
    "priority": "medium",
    "check_id": "CFR-003",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TaskRole",
    "issue": "ECS task may have overly permissive IAM roles",
    "fix": "Avoid using wildcard '*' for resources without conditions. Add conditions like tags, principals, IP addresses, or ARNs to limit the scope.",
    "priority": "HIGH",
    "check_id": "ECS-005",
    "status": "suppressed"
  },
  {
    "source": "security-matrix",
    "path": "lma-virtual-participant-stack/template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "TaskRole",
    "issue": "ECS task IAM role may not follow least-privilege principle",
    "fix": "Replace wildcard resource '*' with specific ARNs to limit the scope of permissions to only the resources required by the task.",
    "priority": "HIGH",
    "check_id": "ECS-006",
    "status": "suppressed"
  }
]