## Create Virtual Participant Request Mapping Template
#set($now = $util.time.nowISO8601())
#set($vpId = $ctx.args.input.VirtualParticipantId)
#set($pk = "vp#${vpId}")
#set($sk = "vp#${vpId}")

{
  "version": "2018-05-29",
  "operation": "PutItem",
  "key": {
    "PK": $util.dynamodb.toDynamoDBJson($pk),
    "SK": $util.dynamodb.toDynamoDBJson($sk)
  },
  "attributeValues": {
    "PK": $util.dynamodb.toDynamoDBJson($pk),
    "SK": $util.dynamodb.toDynamoDBJson($sk),
    "VirtualParticipantId": $util.dynamodb.toDynamoDBJson($vpId),
    "meetingName": $util.dynamodb.toDynamoDBJson($ctx.args.input.meetingName),
    "meetingPlatform": $util.dynamodb.toDynamoDBJson($ctx.args.input.meetingPlatform),
    "meetingId": $util.dynamodb.toDynamoDBJson($ctx.args.input.meetingId),
    #if($ctx.args.input.meetingPassword)
    "meetingPassword": $util.dynamodb.toDynamoDBJson($ctx.args.input.meetingPassword),
    #end
    "status": $util.dynamodb.toDynamoDBJson($ctx.args.input.status),
    "Owner": $util.dynamodb.toDynamoDBJson($ctx.args.input.Owner),
    #if($ctx.args.input.SharedWith)
    "SharedWith": $util.dynamodb.toDynamoDBJson($ctx.args.input.SharedWith),
    #end
    "CreatedAt": $util.dynamodb.toDynamoDBJson($now),
    "UpdatedAt": $util.dynamodb.toDynamoDBJson($now),
    #if($ctx.args.input.ExpiresAfter)
    "ExpiresAfter": $util.dynamodb.toDynamoDBJson($ctx.args.input.ExpiresAfter)
    #end
  },
  "condition": {
    "expression": "attribute_not_exists(PK)"
  }
}
